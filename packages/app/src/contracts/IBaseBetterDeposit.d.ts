/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides
} from "@ethersproject/contracts";
import {BytesLike} from "@ethersproject/bytes";
import {Listener, Provider} from "@ethersproject/providers";
import {FunctionFragment, EventFragment, Result} from "@ethersproject/abi";

interface IBaseBetterDepositInterface extends ethers.utils.Interface {
  functions: {
    "getAgreementEnd()": FunctionFragment;
    "getEscrowInfo(uint256)": FunctionFragment;
    "getEscrowState(uint256)": FunctionFragment;
    "getNumEscrows()": FunctionFragment;
    "getRequiredUserDeposit(address,uint256)": FunctionFragment;
    "getTotalDeposit(uint256)": FunctionFragment;
    "getTotalRequiredDeposit(uint256)": FunctionFragment;
    "getUserDeposit(address,uint256)": FunctionFragment;
    "getUserDepositReleaseApproval(address,uint256)": FunctionFragment;
    "isDepositReleaseApproved(address[],uint256)": FunctionFragment;
    "isPastTimelock()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "getAgreementEnd",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getEscrowInfo",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getEscrowState",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getNumEscrows",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getRequiredUserDeposit",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getTotalDeposit",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getTotalRequiredDeposit",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getUserDeposit",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getUserDepositReleaseApproval",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "isDepositReleaseApproved",
    values: [string[], BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "isPastTimelock",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "getAgreementEnd",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getEscrowInfo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getEscrowState",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getNumEscrows",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRequiredUserDeposit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTotalDeposit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTotalRequiredDeposit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getUserDeposit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getUserDepositReleaseApproval",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isDepositReleaseApproved",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isPastTimelock",
    data: BytesLike
  ): Result;

  events: {
    "AgreementFinish(uint256,address,address)": EventFragment;
    "AgreementStart(uint256,address,address,uint256,uint256)": EventFragment;
    "Create(uint256,address,address)": EventFragment;
    "Deposit(uint256,address,uint256)": EventFragment;
    "DepositReleaseApproval(uint256,address)": EventFragment;
    "Dispute(uint256,address,address,address,uint256)": EventFragment;
    "Withdraw(uint256,address,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "AgreementFinish"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "AgreementStart"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Create"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Deposit"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "DepositReleaseApproval"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Dispute"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Withdraw"): EventFragment;
}

export class IBaseBetterDeposit extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: IBaseBetterDepositInterface;

  functions: {
    getAgreementEnd(overrides?: Overrides): Promise<ContractTransaction>;

    "getAgreementEnd()"(overrides?: Overrides): Promise<ContractTransaction>;

    getEscrowInfo(
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
      1: string;
      2: string;
      3: BigNumber;
      4: number;
    }>;

    "getEscrowInfo(uint256)"(
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
      1: string;
      2: string;
      3: BigNumber;
      4: number;
    }>;

    getEscrowState(
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: number;
    }>;

    "getEscrowState(uint256)"(
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: number;
    }>;

    getNumEscrows(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getNumEscrows()"(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    getRequiredUserDeposit(
      user: string,
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getRequiredUserDeposit(address,uint256)"(
      user: string,
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    getTotalDeposit(
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getTotalDeposit(uint256)"(
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    getTotalRequiredDeposit(
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getTotalRequiredDeposit(uint256)"(
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    getUserDeposit(
      user: string,
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getUserDeposit(address,uint256)"(
      user: string,
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    getUserDepositReleaseApproval(
      user: string,
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "getUserDepositReleaseApproval(address,uint256)"(
      user: string,
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    isDepositReleaseApproved(
      users: string[],
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "isDepositReleaseApproved(address[],uint256)"(
      users: string[],
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    isPastTimelock(overrides?: Overrides): Promise<ContractTransaction>;

    "isPastTimelock()"(overrides?: Overrides): Promise<ContractTransaction>;
  };

  getAgreementEnd(overrides?: Overrides): Promise<ContractTransaction>;

  "getAgreementEnd()"(overrides?: Overrides): Promise<ContractTransaction>;

  getEscrowInfo(
    escrowId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    0: string;
    1: string;
    2: string;
    3: BigNumber;
    4: number;
  }>;

  "getEscrowInfo(uint256)"(
    escrowId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    0: string;
    1: string;
    2: string;
    3: BigNumber;
    4: number;
  }>;

  getEscrowState(
    escrowId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<number>;

  "getEscrowState(uint256)"(
    escrowId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<number>;

  getNumEscrows(overrides?: CallOverrides): Promise<BigNumber>;

  "getNumEscrows()"(overrides?: CallOverrides): Promise<BigNumber>;

  getRequiredUserDeposit(
    user: string,
    escrowId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getRequiredUserDeposit(address,uint256)"(
    user: string,
    escrowId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getTotalDeposit(
    escrowId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getTotalDeposit(uint256)"(
    escrowId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getTotalRequiredDeposit(
    escrowId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getTotalRequiredDeposit(uint256)"(
    escrowId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getUserDeposit(
    user: string,
    escrowId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getUserDeposit(address,uint256)"(
    user: string,
    escrowId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getUserDepositReleaseApproval(
    user: string,
    escrowId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "getUserDepositReleaseApproval(address,uint256)"(
    user: string,
    escrowId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isDepositReleaseApproved(
    users: string[],
    escrowId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "isDepositReleaseApproved(address[],uint256)"(
    users: string[],
    escrowId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isPastTimelock(overrides?: Overrides): Promise<ContractTransaction>;

  "isPastTimelock()"(overrides?: Overrides): Promise<ContractTransaction>;

  callStatic: {
    getAgreementEnd(overrides?: CallOverrides): Promise<void>;

    "getAgreementEnd()"(overrides?: CallOverrides): Promise<void>;

    getEscrowInfo(
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
      1: string;
      2: string;
      3: BigNumber;
      4: number;
    }>;

    "getEscrowInfo(uint256)"(
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
      1: string;
      2: string;
      3: BigNumber;
      4: number;
    }>;

    getEscrowState(
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<number>;

    "getEscrowState(uint256)"(
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<number>;

    getNumEscrows(overrides?: CallOverrides): Promise<BigNumber>;

    "getNumEscrows()"(overrides?: CallOverrides): Promise<BigNumber>;

    getRequiredUserDeposit(
      user: string,
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getRequiredUserDeposit(address,uint256)"(
      user: string,
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTotalDeposit(
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getTotalDeposit(uint256)"(
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTotalRequiredDeposit(
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getTotalRequiredDeposit(uint256)"(
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getUserDeposit(
      user: string,
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getUserDeposit(address,uint256)"(
      user: string,
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getUserDepositReleaseApproval(
      user: string,
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "getUserDepositReleaseApproval(address,uint256)"(
      user: string,
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isDepositReleaseApproved(
      users: string[],
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isDepositReleaseApproved(address[],uint256)"(
      users: string[],
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isPastTimelock(overrides?: CallOverrides): Promise<boolean>;

    "isPastTimelock()"(overrides?: CallOverrides): Promise<boolean>;
  };

  filters: {
    AgreementFinish(
      escrowId: BigNumberish | null,
      userA: string | null,
      userB: string | null
    ): EventFilter;

    AgreementStart(
      escrowId: BigNumberish | null,
      userA: string | null,
      userB: string | null,
      userADeposit: null,
      userBDeposit: null
    ): EventFilter;

    Create(
      escrowId: BigNumberish | null,
      userA: string | null,
      userB: string | null
    ): EventFilter;

    Deposit(
      escrowId: BigNumberish | null,
      depositAddress: string | null,
      depositAmount: null
    ): EventFilter;

    DepositReleaseApproval(
      escrowId: BigNumberish | null,
      user: string | null
    ): EventFilter;

    Dispute(
      escrowId: BigNumberish | null,
      userA: string | null,
      userB: string | null,
      adjudicator: null,
      totalDeposit: null
    ): EventFilter;

    Withdraw(
      escrowId: BigNumberish | null,
      withdrawAddress: string | null,
      withdrawAmount: null
    ): EventFilter;
  };

  estimateGas: {
    getAgreementEnd(overrides?: Overrides): Promise<BigNumber>;

    "getAgreementEnd()"(overrides?: Overrides): Promise<BigNumber>;

    getEscrowInfo(
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getEscrowInfo(uint256)"(
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getEscrowState(
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getEscrowState(uint256)"(
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getNumEscrows(overrides?: CallOverrides): Promise<BigNumber>;

    "getNumEscrows()"(overrides?: CallOverrides): Promise<BigNumber>;

    getRequiredUserDeposit(
      user: string,
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getRequiredUserDeposit(address,uint256)"(
      user: string,
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTotalDeposit(
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getTotalDeposit(uint256)"(
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTotalRequiredDeposit(
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getTotalRequiredDeposit(uint256)"(
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getUserDeposit(
      user: string,
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getUserDeposit(address,uint256)"(
      user: string,
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getUserDepositReleaseApproval(
      user: string,
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getUserDepositReleaseApproval(address,uint256)"(
      user: string,
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isDepositReleaseApproved(
      users: string[],
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isDepositReleaseApproved(address[],uint256)"(
      users: string[],
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isPastTimelock(overrides?: Overrides): Promise<BigNumber>;

    "isPastTimelock()"(overrides?: Overrides): Promise<BigNumber>;
  };

  populateTransaction: {
    getAgreementEnd(overrides?: Overrides): Promise<PopulatedTransaction>;

    "getAgreementEnd()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    getEscrowInfo(
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getEscrowInfo(uint256)"(
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getEscrowState(
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getEscrowState(uint256)"(
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getNumEscrows(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getNumEscrows()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getRequiredUserDeposit(
      user: string,
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getRequiredUserDeposit(address,uint256)"(
      user: string,
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTotalDeposit(
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getTotalDeposit(uint256)"(
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTotalRequiredDeposit(
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getTotalRequiredDeposit(uint256)"(
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getUserDeposit(
      user: string,
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getUserDeposit(address,uint256)"(
      user: string,
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getUserDepositReleaseApproval(
      user: string,
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getUserDepositReleaseApproval(address,uint256)"(
      user: string,
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isDepositReleaseApproved(
      users: string[],
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isDepositReleaseApproved(address[],uint256)"(
      users: string[],
      escrowId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isPastTimelock(overrides?: Overrides): Promise<PopulatedTransaction>;

    "isPastTimelock()"(overrides?: Overrides): Promise<PopulatedTransaction>;
  };
}
